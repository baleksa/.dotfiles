return {
  "nvimdev/guard.nvim",
  -- Builtin configuration, optional
  dependencies = {
    "nvimdev/guard-collection",
  },
  keys = {
    {
      "gq",
      "<Cmd>GuardFmt<CR>",
      desc = "Format with guard.nvim",
    },
  },
  config = function()
    local ft = require("guard.filetype")
    local lint = require("guard.lint")

    ft("lua"):fmt("stylua"):lint({
      cmd = "selene",
      args = { "--no-summary", "--display-style", "json2", "-" },
      stdin = true,
      parse = lint.from_json({
        attributes = {
          lnum = function(offence)
            return offence.primary_label.span.start_line
          end,
          col = function(offence)
            return offence.primary_label.span.start_column
          end,
        },
        severities = {
          Error = lint.severities.error,
          Warning = lint.severities.warning,
        },
        lines = true,
        offset = 0,
        source = "selene",
      }),
    })

    ft("go,gomod"):fmt({ cmd = "goimports", stdin = true }):append("gofmt")
    require("guard").setup({
      fmt_on_save = true,
      lsp_as_default_formatter = true,
    })
    local a, b = 1, 2
    local unused = 1234
    a = b
    b = a
  end,
}
